# .github/workflows/release-binaries.yml

name: Build and Release Binaries

on:
  # Trigger on creation of a GitHub Release
  release:
    types: [published]
  # Trigger on pushes to tags that look like version numbers (e.g., v1.0.0, v0.5.1)
  push:
    tags:
      - 'v*.*.*'
  # binaries on PR to main
  pull_request:
    branches: [main]
  # Optional: Trigger on merges to the main branch to build and store artifacts (not for formal release)
  # push:
  #   branches:
  #     - main # Or your default branch
  # Allows manual triggering of the workflow from the GitHub Actions UI
  workflow_dispatch:

jobs:
  test-build-and-release:
    name: Test, Build, and Release Binaries
    # Use a Linux runner; Bun can cross-compile to other targets
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest # Or specify a particular Bun version, e.g., 1.1.10

      - name: Install dependencies
        # --frozen-lockfile ensures reproducible builds using bun.lockb
        run: bun install --frozen-lockfile

      - name: Run tests
        # It's good practice to run tests before building and releasing
        run: bun test # Assumes your 'bun test' command is configured in package.json

      - name: Build binaries
        # This command executes your build-binaries.ts script
        # The script should output .zip files into the ./dist directory
        run: bun run build-binaries

      # This step uploads the built .zip files to the GitHub Release
      # It runs only if the workflow was triggered by a release or a version tag
      - name: Upload Release Assets
        if: github.event_name == 'release' || startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          # The 'files' property specifies which files to upload.
          # Adjust the path if your build script outputs files elsewhere.
          files: dist/*.zip
        env:
          # The GITHUB_TOKEN is automatically provided by GitHub Actions
          # and has permissions to upload to releases.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Optional: Upload binaries as build artifacts for other types of triggers (e.g., push to main)
      # These artifacts are downloadable from the workflow run page.
      - name: Archive binary artifacts for non-release builds
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' # Example: for pushes to the main branch
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ github.sha }} # Name of the artifact bundle
          path: dist/*.zip # Path to the files to include in the artifact
